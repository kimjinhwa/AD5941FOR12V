[env]
; platform = espressif32
; board = esp-wrover-kit
platform = https://github.com/kimjinhwa/platform-espressif32.git
board = esp-wrover-kit_8M
board_build.partitions = partitions.csv
framework = arduino
;board_build.partitions = default_8MB.csv
;board_upload.flash_size = 8MB
board_config.build.usb_flags = CONFIG_BT_ENABLED=1
;board_build.flash_mode = dio
upload_port = COM5
monitor_port = COM5
custom_prog_version = 1.2.3
lib_deps = 
	makuna/RTC@^2.3.5
	;links2004/WebSockets@^2.4.1
	;lennarthennigs/ESP Telnet@^1.2.2
	; miq19/eModbus@^1.4.1
	; lennarthennigs/ESP Telnet@^1.2.2
	; mbed-okano/PCA9546A @ 0.0.0+sha.2d50d8bba33e

[env:esp32_testrelay]
upload_port = COM5
monitor_port = COM5
monitor_speed = 9600 
;test_filter = test_relay/*
;test_ignore = comm/*

; [env:esp32_testport]
; upload_port = COM5
; monitor_port = COM5
; monitor_speed = 9600 
; ;test_ignore = test/test_port
; test_ignore = test/test_relay


[env:SerialProg]
monitor_speed = 9600 
build_flags = -DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-mfix-esp32-psram-cache-strategy=memw
  	-DCORE_DEBUG_LEVEL=3  # 2 : warning
  	-DLOG_LEVEL=3			# 3 : warning
	-DCONFIG_BT_ENABLED=1
	-DBAUDRATE=9600
	-DBAUDRATESERIAL2=4800
	-DCONFIG_ESP32_WDT_TIMEOUT_S=10  # Watchdog 타이머 만료 시간 (초 단위)
  	-DCONFIG_ESP32_WDT_RESET_LENGTH_S=5  # Watchdog 타이머 만료 후 리셋 지연 시간 (초 단위)
	-DDEBUG485 	# 이 모드가 설정되면 485통신의 특정 번지는 SPI통신의 제어를 위해 사용된다. 
				#
	;-DWEBOTA


; [common]
;[platformio]
;upload_port = ${common.COMPORT}
; monitor_port = ${common.COMPORT}
; build_flags = -DBOARD_HAS_PSRAM
;  	-mfix-esp32-psram-cache-issue
;  	-mfix-esp32-psram-cache-strategy=memw
;  	-DCORE_DEBUG_LEVEL=5

;lib_deps = ${env.lib_deps}

; [env:snmp-espprog]
; debug_tool = esp-prog
; upload_protocol = esp-prog
; debug_init_break = tbreak setup
; build_flags = -DBOARD_HAS_PSRAM
; 	-mfix-esp32-psram-cache-issue
; 	-mfix-esp32-psram-cache-strategy=memw
; 	-DCORE_DEBUG_LEVEL=5
; 	-DS2400
; 	-DDEBUG=1
; 	-DCORE_DEBUG_LEVEL=5
; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


;jobs = 4
;build_cache_dir = r:/work/$PROCECE
;build_dir = r:/BatImpModule_AD5940/build
;platform = https://github.com/platformio/platform-espressif32.git
;board = esp32dev
;monitor_speed = 57600 
;monitor_speed = 230400 
; monitor_speed = 74880 
; upload_speed=74880
;debug_tool = esp-prog
;upload_protocol = esp-prog
;debug_init_break = tbreak setup
;board_upload.flash_size = 8MB
;board_build.partitions = default_8MB.csv
;board_upload.maximum_size = 8388608
; board_upload.flash_size = 8MB
;board_build.flash_mode=dio
 ;board = ESP32Dev
;platform = https://github.com/platformio/platform-espressif32.git
;platform = C:\Users\ServerManager\platform-espressif32
;board = esp-wrover-kit
;board_build.partitions = partitions.csv
